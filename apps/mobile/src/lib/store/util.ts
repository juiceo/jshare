import { pick } from 'lodash';
import { v4 as uuid } from 'uuid';

export type AutoGeneratedProps = {
    id: string;
    archived: boolean;
    archivedAt: Date | null;
    createdAt: Date;
    updatedAt: Date;
};

export const getAutoGeneratedProps = (): AutoGeneratedProps => {
    return {
        id: uuid(),
        archived: false,
        archivedAt: null,
        createdAt: new Date(),
        updatedAt: new Date(),
    };
};

export const getValidOptimisticUpdates = (
    data: object,
    updates: object,
    schema: Zod.ZodSchema<any>
) => {
    const updatedKeys = Object.keys(updates);

    const canUpdateKeys = updatedKeys.filter((key) => {
        return schema.safeParse({
            ...data,
            [key]: (updates as any)[key],
        }).success;
    });

    return pick(updates, canUpdateKeys);
};
