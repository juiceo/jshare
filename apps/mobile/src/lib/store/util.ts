import { v4 as uuid } from 'uuid';

export type AutoGeneratedProps = {
    id: string;
    archived: boolean;
    archivedAt: Date | null;
    createdAt: Date;
    updatedAt: Date;
};

export type RequiredKeys<T extends { id: string }> = Required<Omit<T, keyof AutoGeneratedProps>>;
export type CreateInput<T extends { id: string }> = RequiredKeys<T> & Partial<T>;

export const getAutoGeneratedProps = (): AutoGeneratedProps => {
    return {
        id: uuid(),
        archived: false,
        archivedAt: null,
        createdAt: new Date(),
        updatedAt: new Date(),
    };
};

export const createData = <TData extends { id: string }>(input: CreateInput<TData>): TData => {
    return {
        ...getAutoGeneratedProps(),
        ...input,
    } as unknown as TData;
};
